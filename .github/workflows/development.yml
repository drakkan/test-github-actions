name: CI

on:
  push:
    branches: [main]
  pull_request:

jobs:
  test-deploy:
    name: Test and deploy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: [1.16]
        os: [macos-10.15]
        upload-coverage: [false]

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Build for macOS
        run: |
          go build -ldflags "-s -w -X github.com/drakkan/sftpgo/version.commit=`git describe --always --dirty` -X github.com/drakkan/sftpgo/version.date=`date -u +%FT%TZ`" -o sftpgo
          CGO_ENABLED=1 GOOS=darwin GOARCH=arm64 SDKROOT=$(xcrun --sdk macosx --show-sdk-path) go build -ldflags "-s -w -X github.com/drakkan/sftpgo/version.commit=`git describe --always --dirty` -X github.com/drakkan/sftpgo/version.date=`date -u +%FT%TZ`" -o sftpgo_arm64

      - name: Prepare build artifact for Linux/macOS
        if: startsWith(matrix.os, 'windows-') != true
        run: |
          mkdir -p output/{bash_completion,zsh_completion}
          cp sftpgo output/
          cp sftpgo_arm64 output/
          cp sftpgo.json output/
          cp -r templates output/
          cp -r static output/
          cp -r init output/
          ./sftpgo gen completion bash > output/bash_completion/sftpgo
          ./sftpgo gen completion zsh > output/zsh_completion/_sftpgo
          ./sftpgo gen man -d output/man/man1
          gzip output/man/man1/*

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ matrix.os }}-go${{ matrix.go }}
          path: output

