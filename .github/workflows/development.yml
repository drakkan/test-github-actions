name: CI

on:
  push:
    branches: [master]
  pull_request:

jobs:
  test-deploy:
    name: Test and deploy
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        go: [1.15]
        os: [ubuntu-latest, macos-latest]
        upload-coverage: [true]
        include:
          - go: 1.14
            os: ubuntu-latest
            upload-coverage: false
          - go: 1.15
            os: windows-latest
            upload-coverage: false

    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: ${{ matrix.go }}

      - name: Build for Linux/macOS
        if: startsWith(matrix.os, 'windows-') != true
        run: go build -ldflags "-s -w -X github.com/drakkan/sftpgo/version.commit=`git describe --always --dirty` -X github.com/drakkan/sftpgo/version.date=`date -u +%FT%TZ`" -o sftpgo

      - name: Build for Windows
        if: startsWith(matrix.os, 'windows-')
        run: |
          $GIT_COMMIT = (git describe --always --dirty) | Out-String
          $DATE_TIME = ([datetime]::Now.ToUniversalTime().toString("yyyy-MM-ddTHH:mm:ssZ")) | Out-String
          go build -ldflags "-s -w -X github.com/drakkan/sftpgo/version.commit=$GIT_COMMIT -X github.com/drakkan/sftpgo/version.date=$DATE_TIME" -o sftpgo.exe

      - name: Gather cross build info
        id: cross_info
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        run: |
          GIT_COMMIT=$(git describe --always)
          BUILD_DATE=$(date -u +%FT%TZ)
          echo ::set-output name=sha::${GIT_COMMIT}
          echo ::set-output name=created::${BUILD_DATE}

      - name: Cross build with xgo
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: crazy-max/ghaction-xgo@v1
        with:
          xgo_version: latest
          go_version: ${{ matrix.go }}
          dest: cross
          prefix: sftpgo
          targets: linux/arm64,linux/ppc64le
          v: true
          x: false
          race: false
          ldflags: -s -w -X github.com/drakkan/sftpgo/version.commit=${{ steps.cross_info.outputs.sha }} -X github.com/drakkan/sftpgo/version.date=${{ steps.cross_info.outputs.created }}
          buildmode: default

      - name: Prepare build artifact for Linux/macOS
        if: startsWith(matrix.os, 'windows-') != true
        run: |
          mkdir -p output/{bash_completion,zsh_completion}
          mkdir -p output/examples/rest-api-cli
          cp sftpgo output/
          cp sftpgo.json output/
          cp -r templates output/
          cp -r static output/
          cp -r init output/
          cp examples/rest-api-cli/sftpgo_api_cli output/examples/rest-api-cli/
          ./sftpgo gen completion bash > output/bash_completion/sftpgo
          ./sftpgo gen completion zsh > output/zsh_completion/_sftpgo
          ./sftpgo gen man -d output/man/man1
          gzip output/man/man1/*
          cp cross/sftpgo-linux-arm64 output/ || :
          cp cross/sftpgo-linux-ppc64le output/ || :

      - name: Prepare build artifact for Windows
        if: startsWith(matrix.os, 'windows-')
        run: |
          mkdir output
          copy .\sftpgo.exe .\output
          copy .\sftpgo.json .\output
          mkdir output\templates
          xcopy .\templates .\output\templates\ /E
          mkdir output\static
          xcopy .\static .\output\static\ /E

      - name: Upload build artifact
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ matrix.os }}-go${{ matrix.go }}
          path: output

      - name: Build Linux Packages
        id: build_linux_pkgs
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        run: |
          cp -r pkgs pkgs_arm64
          cp -r pkgs pkgs_ppc64le
          cd pkgs
          ./build.sh
          cd ..
          export NFPM_ARCH=arm64
          export BIN_SUFFIX=-linux-arm64
          cp cross/sftpgo${BIN_SUFFIX} .
          cd pkgs_arm64
          ./build.sh
          cd ..
          export NFPM_ARCH=ppc64le
          export BIN_SUFFIX=-linux-ppc64le
          cp cross/sftpgo${BIN_SUFFIX} .
          cd pkgs_ppc64le
          ./build.sh
          cd ..
          PKG_VERSION=$(cat dist/version)
          echo "::set-output name=pkg-version::${PKG_VERSION}"

      - name: Upload Debian Package
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-x86_64-deb
          path: pkgs/dist/deb/*

      - name: Upload RPM Package
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-x86_64-rpm
          path: pkgs/dist/rpm/*

      - name: Upload Debian Package arm64
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-arm64-deb
          path: pkgs_arm64/dist/deb/*

      - name: Upload RPM Package arm64
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-arm64-rpm
          path: pkgs_arm64/dist/rpm/*

      - name: Upload Debian Package ppc64le
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-ppc64le-deb
          path: pkgs_ppc64le/dist/deb/*

      - name: Upload RPM Package ppc64le
        if: ${{ matrix.upload-coverage && startsWith(matrix.os, 'ubuntu-') }}
        uses: actions/upload-artifact@v2
        with:
          name: sftpgo-${{ steps.build_linux_pkgs.outputs.pkg-version }}-ppc64le-rpm
          path: pkgs_ppc64le/dist/rpm/*
